name: CMake

on:
  push:
    branches: [ $default-branch, v2 ]
  pull_request:
    branches: [ $default-branch ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create tag
      id: create_tag
      run: |
        if [[ "${{ github.event_name }}" == "schedule" ]]; then
          tag=v$(date +%Y%m%d.%H%M%S)
        else
          tag=$(basename "${{ github.ref }}")
        fi
        echo "::set-output name=tag::$tag"
      if: github.event_name == 'push'
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.create_tag.outputs.tag }}
        release_name: ${{ steps.create_tag.outputs.tag }}
        draft: true
        prerelease: false
      if: github.event_name == 'push'

  build:
    runs-on: ${{ matrix.os }}
    needs: [create_release]
    strategy:
        matrix:
            os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Setup Fortran
      uses: awvwgk/setup-fortran@main
      id: setup-fortran
      with:
        compiler: gcc

    - name: Check Fortran
      run: ${{ env.FC }} --version
      env:
        FC: ${{ steps.setup-fortran.outputs.fc }}

    - name: Configure CMake (Linux)
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DEXTERNAL_EIGEN:BOOL=OFF -DPYTHON_WRAPPER:BOOL=OFF -DFORTRAN_WRAPPER=ON
      if: runner.os == 'Linux'

    - name: Configure CMake (Windows)
      run: cmake -B ${{github.workspace}}/build -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DEXTERNAL_EIGEN:BOOL=OFF -DPYTHON_WRAPPER:BOOL=OFF -DFORTRAN_WRAPPER=ON
      env:
        FC: ${{ steps.setup-fortran.outputs.fc }}
      if: runner.os == 'Windows'

    - name: Configure CMake (MacOS)
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DEXTERNAL_EIGEN:BOOL=OFF -DPYTHON_WRAPPER:BOOL=OFF -DFORTRAN_WRAPPER=ON
      if: runner.os == 'MacOS'

    - name: Build
      id: build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # We are just testing in Linux
      run: ctest -C ${{env.BUILD_TYPE}}
      if: runner.os == 'Linux'

    - name: Package
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Package the installer
      run: cpack -C ${{env.BUILD_TYPE}}
      if: runner.os == 'Windows'

    - name: Upload the installer
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{github.workspace}}/build/Moordyn-2.0.0-win64.exe
        asset_name: Windows installer
        tag: ${{ github.ref }}
        overwrite: true
        body: "Windows installer with the C/C++ and Fortran libraries"
      if: runner.os == 'Windows'
